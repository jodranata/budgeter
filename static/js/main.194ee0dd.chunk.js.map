{"version":3,"sources":["components/constants.js","Context/appReducer.js","Context/state.js","components/Balance.js","components/MuiComponents/TransactionField.jsx","components/Transaction.js","components/MuiComponents/MuiStyles.js","components/HistoryBar.js","components/History.js","components/App.js","serviceWorker.js","index.js"],"names":["BUDGETTYPE","type","op","appReducer","state","action","incomes","payload","handleAddIncome","expenses","handleAddExpense","budgetType","filter","transactionId","handleRemoveTransaction","INITIAL_STATE","GlobalContext","createContext","Provider","GlobalProvider","children","useReducer","dispatch","value","addExpenseActions","data","addIncomeActions","removeTransactionAction","id","useStyles","makeStyles","MuiBalance","textAlign","color","width","maxHeight","padding","fontSize","marginBottom","textTransform","wordWrap","marginTop","display","flexDirection","justifyContent","Balance","classes","useContext","currency","Intl","NumberFormat","style","totalIncomes","map","nominal","reduce","a","b","totalExpenses","totalBalance","format","currIncome","currExpenses","budgets","colorType","Grid","key","item","xs","sm","className","wrap","Typography","container","variant","TransactionField","withStyles","root","borderBottomColor","borderBottom","TextField","fieldContainer","opacity","margin","numField","WebkitAppearance","Transaction","removeExpenseAction","removeIncomeAction","useState","incomeNominal","setIncomeNominal","expenseNominal","setExpenseNominal","incomeDetail","setIncomeDetail","expenseDetail","setExpenseDetail","detail","expenseError","setExpenseError","incomeError","setIncomeError","clearErrors","form","handleSubmit","e","preventDefault","min","max","target","isIncomeForm","Number","details","Math","floor","random","trim","handleError","handleChange","transactionType","labelType","noValidate","autoComplete","onSubmit","label","fullWidth","error","helperText","placeholder","onChange","InputProps","startAdornment","InputAdornment","position","Button","spacing","themeBgColor","theme","primaryBgColor","backgroundColor","palette","primary","main","secondaryBgColor","secondary","historyBarContainer","marginLeft","fontWeight","marginRight","height","HistoryBar","props","themeClasses","historyClasses","onDeleteTransaction","bgColor","displayNominal","bgType","justify","alignItems","Fab","aria-label","onClick","historyDetail","overflowY","borderRadius","HistoryChip","historyData","deleteIcon","History","align","createMuiTheme","contrastText","appContainer","minHeight","boxShadow","App","ThemeProvider","md","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"+PAAaA,EAAa,CACxB,CACEC,KAAM,SACNC,GAAI,KAEN,CACED,KAAM,UACNC,GAAI,M,gBCkCOC,EAXI,SAACC,EAAOC,GACzB,OAAQA,EAAOJ,MACb,IDrBsB,qBCsBpB,OArBkB,SAACG,EAAOC,GAAR,sBACnBD,EADmB,CAEtBE,QAAQ,GAAD,mBAAMF,EAAME,SAAZ,CAAqBD,EAAOE,YAmBxBC,CAAgBJ,EAAOC,GAChC,IDtBuB,sBCuBrB,OA3BmB,SAACD,EAAOC,GAAR,sBACpBD,EADoB,CAEvBK,SAAS,GAAD,mBAAML,EAAMK,UAAZ,CAAsBJ,EAAOE,YAyB1BG,CAAiBN,EAAOC,GACjC,IDrB8B,qBCsB5B,OApB0B,SAACD,EAAOC,GAAY,IAC1CM,EAAwBN,EAAxBM,WAAYJ,EAAYF,EAAZE,QACpB,MAAmB,MAAfI,EACK,eACFP,EADL,CAEEE,QAASF,EAAME,QAAQM,QAAO,qBAAGC,gBAAsCN,OAEpE,eACFH,EADL,CAEEK,SAAUL,EAAMK,SAASG,QAAO,qBAAGC,gBAAsCN,OAWhEO,CAAwBV,EAAOC,KC3BtCU,EAAgB,CACpBT,QAAS,GACTG,SAAU,IAGCO,EAAgBC,wBAAcF,GACnCG,EAAaF,EAAbE,SAEKC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,qBAAWlB,EAAYY,GADH,mBACvCX,EADuC,KAChCkB,EADgC,KAc9C,OACE,kBAACJ,EAAD,CACEK,MAAO,CACLnB,QACAoB,kBAfoB,SAAAC,GACxB,OAAOH,EAAS,CAAErB,KFVK,sBEUcM,QAASkB,KAe1CC,iBAbmB,SAAAD,GACvB,OAAOH,EAAS,CAAErB,KFdI,qBEccM,QAASkB,KAczCE,wBAX0B,SAAChB,EAAYiB,GAC3C,OAAON,EAAS,CAAErB,KFdY,qBEccU,aAAYJ,QAASqB,OAa9DR,I,SCnCDS,EAAYC,IAAW,CAC3BC,WAAY,CACVC,UAAW,SACXC,MAAO,mBACPC,MAAO,OACPC,UAAW,OACX,QAAS,CACPC,QAAS,SACT,2BAA4B,CAC1BA,QAAS,WAGb,cAAe,CACbJ,UAAW,SACXK,SAAU,SACVC,aAAc,IACdC,cAAe,YACf,QAAS,CACPN,MAAO,qBAGX,aAAc,CACZI,SAAU,SACVG,SAAU,cAEZ,YAAa,CACXH,SAAU,SACVE,cAAe,aACfC,SAAU,cAEZ,+BAAgC,CAC9B,2BAA4B,CAC1BC,UAAW,UAIjB,oBAAqB,CACnBC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChB,QAAS,CACPR,QAAS,YA6DAS,EAxDC,WACd,IAAMC,EAAUjB,IADI,EAIhBkB,qBAAW/B,GADbZ,MAASE,EAHS,EAGTA,QAASG,EAHA,EAGAA,SAEduC,EAAW,IAAIC,KAAKC,aAAa,KAAM,CAC3CC,MAAO,WACPH,SAAU,QAENI,EAAe9C,EAAQ+C,KAAI,qBAAGC,WAAuBC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAC7EC,EAAgBjD,EAAS4C,KAAI,qBAAGC,WAAuBC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAC/EE,EAAeX,EAASY,OAAOR,EAAeM,GAE9CG,EAAU,WAAOb,EAASY,OAAOR,IACjCU,EAAY,WAAOd,EAASY,OAAOF,IAEnCK,EAAU/D,EAAWqD,KAAI,YAAmB,IAAhBpD,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAChC8D,EAAqB,WAAT/D,EAAoB,YAAc,UACpD,OACE,kBAACgE,EAAA,EAAD,CACEC,IAAKhE,EACLiE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,UAAWxB,EAAQ,qBACnByB,KAAK,UAEL,kBAACC,EAAA,EAAD,CAAYF,UAAS,4BAAuBrE,EAAvB,QAAmCgC,MAAO+B,GAA/D,qBACiB/D,IAEjB,kBAACuE,EAAA,EAAD,CAAYvC,MAAO+B,EAAWM,UAAS,+BAA0BrE,EAA1B,YAAvC,UACe,WAATA,EAAoB4D,EAAaC,QAM7C,OACE,kBAACG,EAAA,EAAD,CAAMQ,WAAS,EAACH,UAAWxB,EAAQf,YACjC,kBAACkC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,wBAAIE,UAAU,YAAd,aACA,kBAACE,EAAA,EAAD,CAAYE,QAAQ,aAApB,iCAEF,kBAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,yBAAKE,UAAWxB,EAAQ,sBACtB,0BAAMwB,UAAU,uBAAhB,gBACA,0BAAMA,UAAU,yBAAyBX,KAG7C,kBAACM,EAAA,EAAD,CAAMQ,WAAS,EAACN,MAAI,EAACC,GAAI,IACtBL,K,4CCpFMY,EAhBUC,IAAW,CAClCC,KAAM,CAEJ,4FAA6F,CAC3F5C,MAAO,oBAET,+BAAgC,CAC9B6C,kBAAmB,sBAGrB,qCAAsC,CACpCC,aAAc,uCAXKH,CActBI,KCFGnD,EAAYC,IAAW,CAC3BmD,eAAgB,CACdxC,UAAW,OACX,wBAAyB,CACvB,2BAA4B,CAC1BG,eAAgB,WAGpB,4BAA6B,CAC3BsC,QAAS,IACT,cAAe,CACbA,QAAS,IAGb,QAAS,CACPC,OAAQ,aAGZC,SAAU,CACR,uEAAwE,CACtEC,iBAAkB,WA+KTC,EA1KK,WAClB,IAAMxC,EAAUjB,IADQ,EASpBkB,qBAAW/B,GAJbQ,GALsB,EAItBpB,MAJsB,EAKtBoB,mBACAE,EANsB,EAMtBA,iBANsB,KAOtB6D,oBAPsB,EAQtBC,mBAGwCC,mBAAS,KAX3B,mBAWjBC,EAXiB,KAWFC,EAXE,OAYoBF,mBAAS,IAZ7B,mBAYjBG,EAZiB,KAYDC,EAZC,OAagBJ,mBAAS,IAbzB,mBAajBK,EAbiB,KAaHC,EAbG,OAckBN,mBAAS,IAd3B,mBAcjBO,EAdiB,KAcFC,EAdE,OAgBgBR,mBAAS,CAC/CnC,SAAS,EACT4C,QAAQ,IAlBc,mBAgBjBC,EAhBiB,KAgBHC,EAhBG,OAqBcX,mBAAS,CAC7CnC,SAAS,EACT4C,QAAQ,IAvBc,mBAqBjBG,EArBiB,KAqBJC,EArBI,KAyClBC,EAAc,SAAAC,GAClB,MAAa,eAATA,EACKF,EAAe,CACpBhD,SAAS,EACT4C,QAAQ,IAELE,EAAgB,CACrB9C,SAAS,EACT4C,QAAQ,KAINO,EAAe,SAAAC,GACnBA,EAAEC,iBADsB,IAlFRC,EAAKC,EAqFTjF,EACR8E,EADFI,OAAUlF,GAGNmF,EAAsB,eAAPnF,EAEfH,EAAO,CACX6B,QAAwB0D,OAAfD,EAAsBrB,EAAwBE,GACvDqB,QAASF,EAAejB,EAAeE,EACvC/F,KAAM8G,EAAe,IAAM,IAC3BlG,eA9Fc+F,EA8FY,IA9FPC,EA8FmB,WA7FnCK,KAAKC,MAAMD,KAAKE,SAAWP,GAAOD,IAgGvC,IAAKnF,EAAK6B,UAAY7B,EAAKwF,UAAYxF,EAAKwF,QAAQI,OAClD,OA3CgB,SAACzF,EAAIH,GACvB,IAAMsF,EAAsB,eAAPnF,EACb0B,EAAqB7B,EAArB6B,QAAS2D,EAAYxF,EAAZwF,QACjB,OAAIF,EACKT,EAAe,CACpBhD,SAAUA,EACV4C,QAASe,EAAQI,SAGdjB,EAAgB,CACrB9C,SAAUA,EACV4C,QAASe,EAAQI,SAgCVC,CAAY1F,EAAIH,GAErBsF,GACFrF,EAAiBD,GACjBsE,EAAgB,IAChBJ,EAAiB,IACjBY,EAAY,gBAEZ/E,EAAkBC,GAClBwE,EAAiB,IACjBJ,EAAkB,IAClBU,EAAY,iBAIVgB,EAAe,SAAAb,GACnBA,EAAEC,iBADsB,MAIpBD,EADFI,OAAU7G,EAHY,EAGZA,KAAMsB,EAHM,EAGNA,MAAOK,EAHD,EAGCA,GAGZ,WAAT3B,EACS,kBAAP2B,EAAwB+D,EAAiBpE,GACxCsE,EAAkBtE,GACP,iBAAPK,EAAuBmE,EAAgBxE,GAC7C0E,EAAiB1E,IAGlBiG,EAAkBxH,EAAWqD,KAAI,YAAmB,IAAhBpD,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACxC8D,EAAqB,WAAT/D,EAAoB,YAAc,UAC9CwH,EAAqB,WAATxH,EAAoB,SAAW,UACjD,OACE,kBAACgE,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,EAAGH,IAAKhE,GACrB,0BACEwH,YAAU,EACVC,aAAa,MACb/F,GAAE,UAAK6F,EAAL,QACFG,SAAUnB,GAEV,kBAACxC,EAAA,EAAD,CAAMQ,WAAS,EAACN,MAAI,EAACG,UAAWxB,EAAQmC,gBACtC,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,CACEnC,MAAO+B,EACPpC,GAAE,UAAK6F,EAAL,WACFxH,KAAK,SACL4H,MAAK,cAASJ,GACdnD,UAAWxB,EAAQsC,SACnB7D,MAAgB,WAATtB,EAAoByF,EAAgBE,EAC3CkC,WAAS,EACTC,MACgB,WAAdN,IAA2BpB,EAAY/C,UAAY6C,EAAa7C,QAElE0E,WACE3B,EAAY/C,SAAW6C,EAAa7C,QAApC,2BAEI,GAEN2E,YAAY,IACZC,SAAUX,EACVY,WAAY,CACVC,eAAgB,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SAAzB,SAItB,kBAACrE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,CACEnC,MAAO+B,EACPpC,GAAE,UAAK6F,EAAL,UACFxH,KAAK,OACL4H,MAAK,UAAKJ,EAAL,WACLlG,MAAgB,WAATtB,EAAoB6F,EAAeE,EAC1C+B,MACgB,WAAdN,IAA2BpB,EAAYH,SAAWC,EAAaD,OAEjE8B,WACE3B,EAAYH,QAAUC,EAAaD,OAC/B,2BACA,GAEN4B,WAAS,EACTxD,UAAWxB,EAAQsC,SACnB8C,SAAUX,KAGd,kBAACtD,EAAA,EAAD,CAAME,MAAI,EAACM,WAAS,EAACL,GAAI,GAAIE,UAAU,sBACrC,kBAACiE,EAAA,EAAD,CAAQ7D,QAAQ,YAAYzC,MAAO+B,EAAW/D,KAAK,UAAnD,iBASZ,OACE,kBAACgE,EAAA,EAAD,CAAMQ,WAAS,EAAC+D,QAAS,GACtBhB,I,0BC3MMiB,EAAe3G,KAAW,SAAA4G,GAAK,MAAK,CAC/CC,eAAgB,CACdC,gBAAiBF,EAAMG,QAAQC,QAAQC,MAEzCC,iBAAkB,CAChBJ,gBAAiBF,EAAMG,QAAQI,UAAUF,UCCvClH,EAAYC,IAAW,CAC3BoH,oBAAqB,CACnB,mBAAoB,CAClBlH,UAAW,OACXmH,WAAY,OAEd,iBAAkB,CAChBjH,MAAO,OACPkH,WAAY,MACZ7G,cAAe,aACfC,SAAU,cAEZ,oBAAqB,CACnBR,UAAW,QACXqH,YAAa,OAEf,QAAS,CACPjH,QAAS,MACT+C,OAAQ,QACR,iBAAkB,CAChBjD,MAAO,OACPoH,OAAQ,YA0CDC,EApCI,SAAAC,GACjB,IAAMC,EAAehB,IACfiB,EAAiB7H,IACf8H,EAAkDH,EAAlDG,oBAAqBrG,EAA6BkG,EAA7BlG,QAAS4C,EAAoBsD,EAApBtD,OAAQ0D,EAAYJ,EAAZI,QAMxCC,EAJW,IAAI5G,KAAKC,aAAa,KAAM,CAC3CC,MAAO,WACPH,SAAU,QAEoBY,OAAON,GACjCwG,EACQ,YAAZF,EAAwBH,EAAad,eAAiBc,EAAaT,iBACrE,OACE,kBAAC/E,EAAA,EAAD,CACEQ,WAAS,EACTN,MAAI,EACJG,UAAWoF,EAAeR,oBAC1Ba,QAAQ,gBAER,kBAAC9F,EAAA,EAAD,CAAMQ,WAAS,EAACN,MAAI,EAACC,GAAI,EAAGE,UAAWwF,EAAQE,WAAW,UACxD,kBAAC/F,EAAA,EAAD,CAAME,MAAI,EAACM,WAAS,EAACL,GAAI,GACvB,0BAAME,UAAU,6BAA6B4B,IAE/C,kBAACjC,EAAA,EAAD,CAAME,MAAI,EAACM,WAAS,EAACL,GAAI,GACvB,0BAAME,UAAU,8BAAhB,UAAiDuF,MAGrD,kBAAC5F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC6F,EAAA,EAAD,CAAKhI,MAAM,UAAUiI,aAAW,SAASC,QAASR,GAChD,kBAAC,IAAD,UCzDJ9H,EAAYC,IAAW,CAC3BsI,cAAe,CACbnI,MAAO,mBACP,QAAS,CACPG,QAAS,OAEX,yBAA0B,CACxBC,SAAU,SACVC,aAAc,QAEhB,sBAAuB,CACrB+H,UAAW,OACXlI,UAAW,QACX,uBAAwB,CACtBD,MAAO,MACPoH,OAAQ,OAEV,6BAA8B,CAC5BV,gBAAiB,2BACjB0B,aAAc,QAEhB,6BAA8B,CAC5B1B,gBAAiB,UACjB0B,aAAc,YAMhBC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAa7I,EAAhB,EAAgBA,wBAAhB,OAClB6I,EAAYnH,KAAI,YAAgD,IAA7CpD,EAA4C,EAA5CA,KAAMqD,EAAsC,EAAtCA,QAAS2D,EAA6B,EAA7BA,QAASpG,EAAoB,EAApBA,cACnCmD,EAAqB,MAAT/D,EAAe,YAAc,UAM/C,OACE,kBAAC,WAAD,CAAUiE,IAAKrD,GACb,kBAAC,EAAD,CACE4J,WAAW,aACXd,oBAAqB,kBAPlBhI,EAAwB1B,EAAMY,IAQjCyC,QAASA,EACT4C,OAAQe,EACR2C,QAAS5F,EACTnD,cAAeA,SA2CV6J,EArCC,WACd,IAAM5H,EAAUjB,IADI,EAEuBkB,qBAAW/B,GAA9CZ,EAFY,EAEZA,MAAOuB,EAFK,EAELA,wBACPrB,EAAsBF,EAAtBE,QAASG,EAAaL,EAAbK,SAEjB,OACE,kBAACwD,EAAA,EAAD,CAAMQ,WAAS,EAACH,UAAWxB,EAAQsH,eACjC,kBAACnG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAYmG,MAAM,SAAS1I,MAAM,WAAjC,mBAGA,yBAAKqC,UAAU,oBACZhE,GACC,kBAAC,EAAD,CACEkK,YAAalK,EACbqB,wBAAyBA,MAKjC,kBAACsC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAYmG,MAAM,SAAS1I,MAAM,WAAjC,oBAGA,yBAAKqC,UAAU,oBACZ7D,GACC,kBAAC,EAAD,CACE+J,YAAa/J,EACbkB,wBAAyBA,QC1EjC+G,G,OAAQkC,IAAe,CAC3B/B,QAAS,CACPC,QAAS,CACPC,KAAM,oBACN8B,aAAc,sBAEhB5B,UAAW,CACTF,KAAM,oBACN8B,aAAc,0BAKdhJ,EAAYC,IAAW,CAC3BgJ,aAAc,CACZlC,gBAAiB,kBACjBmC,UAAW,QACX7I,MAAO,QACPE,QAAS,SACT,2BAA4B,CAC1BF,MAAO,OACP6I,UAAW,OACX5F,OAAQ,SACR6F,UAAW,uCACX,wBAAyB,CACvBD,UAAW,OAEb,oBAAqB,CACnBA,UAAW,WA+BJE,MAzBf,WACE,IAAMnI,EAAUjB,IAChB,OACE,yBAAKyC,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC4G,EAAA,EAAD,CAAexC,MAAOA,GACpB,kBAACzE,EAAA,EAAD,CAAMQ,WAAS,EAACH,UAAWxB,EAAQgI,cACjC,kBAAC7G,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI+G,GAAI,GACrB,kBAAC,EAAD,OAEF,kBAAClH,EAAA,EAAD,CAAMQ,WAAS,EAACN,MAAI,EAACC,GAAI,GAAI+G,GAAI,GAC/B,kBAAClH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,UAAU,sBAC3B,kBAAC,EAAD,OAEF,kBAACL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,UAAU,kBAC3B,kBAAC,EAAD,aCjDI8G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACrE,GACNsE,QAAQtE,MAAMA,EAAMuE,a","file":"static/js/main.194ee0dd.chunk.js","sourcesContent":["export const BUDGETTYPE = [\n  {\n    type: 'income',\n    op: '+',\n  },\n  {\n    type: 'expense',\n    op: '-',\n  },\n];\n\nexport const ADD_INCOME = 'INCOME_TRANSACTION';\nexport const ADD_EXPENSE = 'EXPENSE_TRANSACTION';\nexport const REMOVE_INCOME = 'REMOVE_TRANSACTION';\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\nexport const REMOVE_TRANSACTION = 'REMOVE_TRANSACTION';\n","import {\n  ADD_INCOME,\n  ADD_EXPENSE,\n  REMOVE_EXPENSE,\n  REMOVE_INCOME,\n  REMOVE_TRANSACTION,\n} from '../components/constants';\n\nconst handleAddExpense = (state, action) => ({\n  ...state,\n  expenses: [...state.expenses, action.payload],\n});\nconst handleAddIncome = (state, action) => ({\n  ...state,\n  incomes: [...state.incomes, action.payload],\n});\n\nconst handleRemoveTransaction = (state, action) => {\n  const { budgetType, payload } = action;\n  if (budgetType === '+')\n    return {\n      ...state,\n      incomes: state.incomes.filter(({ transactionId }) => transactionId !== payload),\n    };\n  return {\n    ...state,\n    expenses: state.expenses.filter(({ transactionId }) => transactionId !== payload),\n  };\n};\n\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_INCOME:\n      return handleAddIncome(state, action);\n    case ADD_EXPENSE:\n      return handleAddExpense(state, action);\n    case REMOVE_TRANSACTION:\n      return handleRemoveTransaction(state, action);\n    default:\n  }\n};\nexport default appReducer;\n","import React, { createContext, useReducer } from 'react';\nimport {\n  ADD_INCOME,\n  ADD_EXPENSE,\n  REMOVE_INCOME,\n  REMOVE_EXPENSE,\n  REMOVE_TRANSACTION,\n} from '../components/constants';\nimport appReducer from './appReducer';\n\nconst INITIAL_STATE = {\n  incomes: [],\n  expenses: [],\n};\n\nexport const GlobalContext = createContext(INITIAL_STATE);\nconst { Provider } = GlobalContext;\n\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, INITIAL_STATE);\n\n  const addExpenseActions = data => {\n    return dispatch({ type: ADD_EXPENSE, payload: data });\n  };\n  const addIncomeActions = data => {\n    return dispatch({ type: ADD_INCOME, payload: data });\n  };\n\n  const removeTransactionAction = (budgetType, id) => {\n    return dispatch({ type: REMOVE_TRANSACTION, budgetType, payload: id });\n  };\n\n  return (\n    <Provider\n      value={{\n        state,\n        addExpenseActions,\n        addIncomeActions,\n\n        removeTransactionAction,\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { GlobalContext } from '../Context/state';\nimport { BUDGETTYPE } from './constants';\n\nconst useStyles = makeStyles({\n  MuiBalance: {\n    textAlign: 'center',\n    color: 'rgb(241,241,241)',\n    width: '100%',\n    maxHeight: '100%',\n    '& > *': {\n      padding: '10px 0',\n      '@media(min-width: 600px)': {\n        padding: '20px 0',\n      },\n    },\n    '& .appTitle': {\n      textAlign: 'center',\n      fontSize: '2.3rem',\n      marginBottom: '0',\n      textTransform: 'uppercase',\n      '& + *': {\n        color: 'rgb(195,195,195)',\n      },\n    },\n    '& .balance': {\n      fontSize: '1.8rem',\n      wordWrap: 'break-word',\n    },\n    '& .budget': {\n      fontSize: '1.4rem',\n      textTransform: 'capitalize',\n      wordWrap: 'break-word',\n    },\n    '& .MuiGrid-item:nth-child(3)': {\n      '@media(min-width: 600px)': {\n        marginTop: '35px',\n      },\n    },\n  },\n  'MuiFlex-colcenter': {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    '& > *': {\n      padding: '3px 0',\n    },\n  },\n});\n\nconst Balance = () => {\n  const classes = useStyles();\n  const {\n    state: { incomes, expenses },\n  } = useContext(GlobalContext);\n  const currency = new Intl.NumberFormat('en', {\n    style: 'currency',\n    currency: 'USD',\n  });\n  const totalIncomes = incomes.map(({ nominal }) => nominal).reduce((a, b) => a + b, 0);\n  const totalExpenses = expenses.map(({ nominal }) => nominal).reduce((a, b) => a + b, 0);\n  const totalBalance = currency.format(totalIncomes - totalExpenses);\n\n  const currIncome = `+${currency.format(totalIncomes)}`;\n  const currExpenses = `-${currency.format(totalExpenses)}`;\n\n  const budgets = BUDGETTYPE.map(({ type, op }) => {\n    const colorType = type === 'income' ? 'secondary' : 'primary';\n    return (\n      <Grid\n        key={op}\n        item\n        xs={12}\n        sm={6}\n        className={classes['MuiFlex-colcenter']}\n        wrap=\"nowrap\"\n      >\n        <Typography className={`budget budgetText ${type}Text`} color={colorType}>\n          {`Your Total ${type}`}\n        </Typography>\n        <Typography color={colorType} className={`budget budgetNominal ${type}Nominal`}>\n          {`${type === 'income' ? currIncome : currExpenses}`}\n        </Typography>\n      </Grid>\n    );\n  });\n\n  return (\n    <Grid container className={classes.MuiBalance}>\n      <Grid item xs={12}>\n        <h1 className=\"appTitle\">Budgetter</h1>\n        <Typography variant=\"subtitle2\">Your personal budget tracker</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <div className={classes['MuiFlex-colcenter']}>\n          <span className=\"balance balanceText\">Your Balance</span>\n          <span className=\"balance balanceNumber\">{totalBalance}</span>\n        </div>\n      </Grid>\n      <Grid container item xs={12}>\n        {budgets}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Balance;\n","import withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\n\nconst TransactionField = withStyles({\n  root: {\n    // eslint-disable-next-line max-len\n    '& label, .MuiInputBase-input, .MuiInputAdornment-root.MuiInputAdornment-positionStart > p': {\n      color: 'rgb(231,231,231)',\n    },\n    '& .MuiInput-underline:before': {\n      borderBottomColor: 'rgb(241, 241, 241)',\n    },\n\n    '& .MuiInput-underline:hover:before': {\n      borderBottom: '2px solid rgba(248,248,248,0.873)',\n    },\n  },\n})(TextField);\n\nexport default TransactionField;\n","import React, { useState, useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport TransactionField from './MuiComponents/TransactionField';\n\nimport { BUDGETTYPE } from './constants';\nimport { GlobalContext } from '../Context/state';\n\nconst generateID = (min, max) => {\n  return Math.floor(Math.random() * max) + min;\n};\n\nconst useStyles = makeStyles({\n  fieldContainer: {\n    marginTop: '24px',\n    '& .button-transaction': {\n      '@media(max-width: 960px)': {\n        justifyContent: 'center',\n      },\n    },\n    '& .MuiFormHelperText-root': {\n      opacity: '0',\n      '&.Mui-error': {\n        opacity: 1,\n      },\n    },\n    '& > *': {\n      margin: '5px auto',\n    },\n  },\n  numField: {\n    '& input::-webkit-outer-spin-button, input::-webkit-inner-spin-button': {\n      WebkitAppearance: 'none',\n    },\n  },\n});\n\nconst Transaction = () => {\n  const classes = useStyles();\n\n  const {\n    state,\n    addExpenseActions,\n    addIncomeActions,\n    removeExpenseAction,\n    removeIncomeAction,\n  } = useContext(GlobalContext);\n\n  const [incomeNominal, setIncomeNominal] = useState('');\n  const [expenseNominal, setExpenseNominal] = useState('');\n  const [incomeDetail, setIncomeDetail] = useState('');\n  const [expenseDetail, setExpenseDetail] = useState('');\n\n  const [expenseError, setExpenseError] = useState({\n    nominal: false,\n    detail: false,\n  });\n\n  const [incomeError, setIncomeError] = useState({\n    nominal: false,\n    detail: false,\n  });\n\n  const handleError = (id, data) => {\n    const isIncomeForm = id === 'IncomeForm';\n    const { nominal, details } = data;\n    if (isIncomeForm) {\n      return setIncomeError({\n        nominal: !nominal,\n        detail: !details.trim(),\n      });\n    }\n    return setExpenseError({\n      nominal: !nominal,\n      detail: !details.trim(),\n    });\n  };\n\n  const clearErrors = form => {\n    if (form === 'IncomeForm')\n      return setIncomeError({\n        nominal: false,\n        detail: false,\n      });\n    return setExpenseError({\n      nominal: false,\n      detail: false,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      target: { id },\n    } = e;\n\n    const isIncomeForm = id === 'IncomeForm';\n\n    const data = {\n      nominal: isIncomeForm ? Number(incomeNominal) : Number(expenseNominal),\n      details: isIncomeForm ? incomeDetail : expenseDetail,\n      type: isIncomeForm ? '+' : '-',\n      transactionId: generateID(1000000000, 8999999999),\n    };\n\n    if (!data.nominal || !data.details || !data.details.trim())\n      return handleError(id, data);\n\n    if (isIncomeForm) {\n      addIncomeActions(data);\n      setIncomeDetail('');\n      setIncomeNominal('');\n      clearErrors('IncomeForm');\n    } else {\n      addExpenseActions(data);\n      setExpenseDetail('');\n      setExpenseNominal('');\n      clearErrors('ExpenseForm');\n    }\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    const {\n      target: { type, value, id },\n    } = e;\n\n    if (type === 'number') {\n      if (id === 'IncomeNominal') setIncomeNominal(value);\n      else setExpenseNominal(value);\n    } else if (id === 'IncomeDetail') setIncomeDetail(value);\n    else setExpenseDetail(value);\n  };\n\n  const transactionType = BUDGETTYPE.map(({ type, op }) => {\n    const colorType = type === 'income' ? 'secondary' : 'primary';\n    const labelType = type === 'income' ? 'Income' : 'Expense';\n    return (\n      <Grid item sm={6} key={op}>\n        <form\n          noValidate\n          autoComplete=\"off\"\n          id={`${labelType}Form`}\n          onSubmit={handleSubmit}\n        >\n          <Grid container item className={classes.fieldContainer}>\n            <Grid item xs={12}>\n              <TransactionField\n                color={colorType}\n                id={`${labelType}Nominal`}\n                type=\"number\"\n                label={`Add ${labelType}`}\n                className={classes.numField}\n                value={type === 'income' ? incomeNominal : expenseNominal}\n                fullWidth\n                error={\n                  labelType === 'Income' ? !!incomeError.nominal : !!expenseError.nominal\n                }\n                helperText={\n                  incomeError.nominal || expenseError.nominal\n                    ? `Please fill in the field`\n                    : ''\n                }\n                placeholder=\"0\"\n                onChange={handleChange}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TransactionField\n                color={colorType}\n                id={`${labelType}Detail`}\n                type=\"text\"\n                label={`${labelType} Detail`}\n                value={type === 'income' ? incomeDetail : expenseDetail}\n                error={\n                  labelType === 'Income' ? !!incomeError.detail : !!expenseError.detail\n                }\n                helperText={\n                  incomeError.detail || expenseError.detail\n                    ? 'Please fill in the field'\n                    : ''\n                }\n                fullWidth\n                className={classes.numField}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item container xs={12} className=\"button-transaction\">\n              <Button variant=\"contained\" color={colorType} type=\"submit\">\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Grid>\n    );\n  });\n  return (\n    <Grid container spacing={4}>\n      {transactionType}\n    </Grid>\n  );\n};\n\nexport default Transaction;\n","import makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport const themeBgColor = makeStyles(theme => ({\n  primaryBgColor: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  secondaryBgColor: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { themeBgColor } from './MuiComponents/MuiStyles';\n\nconst useStyles = makeStyles({\n  historyBarContainer: {\n    '& .historyDetail': {\n      textAlign: 'left',\n      marginLeft: '8px',\n    },\n    '& .historySpan': {\n      width: '100%',\n      fontWeight: '700',\n      textTransform: 'capitalize',\n      wordWrap: 'break-word',\n    },\n    '& .historyNominal': {\n      textAlign: 'right',\n      marginRight: '8px',\n    },\n    '& > *': {\n      padding: '2px',\n      margin: '5px 0',\n      '& .MuiFab-root': {\n        width: '35px',\n        height: '35px',\n      },\n    },\n  },\n});\n\nconst HistoryBar = props => {\n  const themeClasses = themeBgColor();\n  const historyClasses = useStyles();\n  const { onDeleteTransaction, nominal, detail, bgColor } = props;\n\n  const currency = new Intl.NumberFormat('en', {\n    style: 'currency',\n    currency: 'USD',\n  });\n  const displayNominal = currency.format(nominal);\n  const bgType =\n    bgColor === 'primary' ? themeClasses.primaryBgColor : themeClasses.secondaryBgColor;\n  return (\n    <Grid\n      container\n      item\n      className={historyClasses.historyBarContainer}\n      justify=\"space-around\"\n    >\n      <Grid container item xs={9} className={bgType} alignItems=\"center\">\n        <Grid item container xs={8}>\n          <span className=\"historySpan historyDetail\">{detail}</span>\n        </Grid>\n        <Grid item container xs={4}>\n          <span className=\"historySpan historyNominal\">{`${displayNominal}`}</span>\n        </Grid>\n      </Grid>\n      <Grid item xs={2}>\n        <Fab color=\"primary\" aria-label=\"delete\" onClick={onDeleteTransaction}>\n          <DeleteIcon />\n        </Fab>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default HistoryBar;\n","import React, { Fragment, useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { GlobalContext } from '../Context/state';\nimport HistoryBar from './HistoryBar';\n\nconst useStyles = makeStyles({\n  historyDetail: {\n    color: 'rgb(231,231,231)',\n    '& > *': {\n      padding: '7px',\n    },\n    '&  .MuiTypography-root': {\n      fontSize: '1.2rem',\n      marginBottom: '14px',\n    },\n    '& .historyContainer': {\n      overflowY: 'auto',\n      maxHeight: '350px',\n      '&::-webkit-scrollbar': {\n        width: '5px',\n        height: '5px',\n      },\n      '&::-webkit-scrollbar-track': {\n        backgroundColor: 'rgba(255, 255, 255, 0.1)',\n        borderRadius: '10px',\n      },\n      '&::-webkit-scrollbar-thumb': {\n        backgroundColor: '#11171a',\n        borderRadius: '10px',\n      },\n    },\n  },\n});\n\nconst HistoryChip = ({ historyData, removeTransactionAction }) =>\n  historyData.map(({ type, nominal, details, transactionId }) => {\n    const colorType = type === '+' ? 'secondary' : 'primary';\n\n    const onDeleteTransaction = (budgetType, id) => {\n      return removeTransactionAction(type, transactionId);\n    };\n\n    return (\n      <Fragment key={transactionId}>\n        <HistoryBar\n          deleteIcon=\"deleteIcon\"\n          onDeleteTransaction={() => onDeleteTransaction(type, transactionId)}\n          nominal={nominal}\n          detail={details}\n          bgColor={colorType}\n          transactionId={transactionId}\n        />\n      </Fragment>\n    );\n  });\n\nconst History = () => {\n  const classes = useStyles();\n  const { state, removeTransactionAction } = useContext(GlobalContext);\n  const { incomes, expenses } = state;\n\n  return (\n    <Grid container className={classes.historyDetail}>\n      <Grid item xs={12} sm={6}>\n        <Typography align=\"center\" color=\"inherit\">\n          Incomes History\n        </Typography>\n        <div className=\"historyContainer\">\n          {incomes && (\n            <HistoryChip\n              historyData={incomes}\n              removeTransactionAction={removeTransactionAction}\n            />\n          )}\n        </div>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Typography align=\"center\" color=\"inherit\">\n          Expenses History\n        </Typography>\n        <div className=\"historyContainer\">\n          {expenses && (\n            <HistoryChip\n              historyData={expenses}\n              removeTransactionAction={removeTransactionAction}\n            />\n          )}\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default History;\n","import React from 'react';\nimport { MuiThemeProvider as ThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Grid from '@material-ui/core/Grid';\n\nimport { GlobalProvider } from '../Context/state';\nimport Balance from './Balance';\nimport Transaction from './Transaction';\nimport History from './History';\nimport './css/App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: 'rgb(226, 105, 88)',\n      contrastText: 'rgb(236, 236, 236)',\n    },\n    secondary: {\n      main: 'rgb(56, 136, 173)',\n      contrastText: 'rgb(236, 236, 236)',\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  appContainer: {\n    backgroundColor: 'rgb(53, 53, 53)',\n    minHeight: '100vh',\n    width: '100vw',\n    padding: '0 18px',\n    '@media(min-width: 960px)': {\n      width: '80vw',\n      minHeight: '80vh',\n      margin: '0 auto',\n      boxShadow: '0 0 18px 12px rgba(121,121,121,0.67)',\n      '& .transactionSection': {\n        minHeight: '38%',\n      },\n      '& .historySection': {\n        minHeight: '62%',\n      },\n    },\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className=\"App\">\n      <GlobalProvider>\n        <ThemeProvider theme={theme}>\n          <Grid container className={classes.appContainer}>\n            <Grid item xs={12} md={4}>\n              <Balance />\n            </Grid>\n            <Grid container item xs={12} md={8}>\n              <Grid item xs={12} className=\"transactionSection\">\n                <Transaction />\n              </Grid>\n              <Grid item xs={12} className=\"historySection\">\n                <History />\n              </Grid>\n            </Grid>\n          </Grid>\n        </ThemeProvider>\n      </GlobalProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}